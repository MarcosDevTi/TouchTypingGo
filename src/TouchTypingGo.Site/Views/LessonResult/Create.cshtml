@using TouchTypingGo.Application.ViewModels
@model TouchTypingGo.Application.ViewModels.LessonResultViewModel

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>LessonResultViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            @*<div asp-validation-summary="ModelOnly" class="text-danger"></div>*@
            
            <vc:summary />

            <div class="form-group">
                <label asp-for="Wpm" class="control-label"></label>
                <input asp-for="Wpm" class="form-control" />
                <span asp-validation-for="Wpm" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Time" class="control-label"></label>
                <input asp-for="Time" class="form-control" />
                <span asp-validation-for="Time" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Errors" class="control-label"></label>
                <input asp-for="Errors" class="form-control" />
                <span asp-validation-for="Errors" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="EhAuthenticated" /> @Html.DisplayNameFor(model => model.EhAuthenticated)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="ErrorKey" class="control-label"></label>
                <input asp-for="ErrorKey" class="form-control" />
                <span asp-validation-for="ErrorKey" class="text-danger"></span>
            </div>
          
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="LessonPresentation" class="control-label"></label>
                <div class="col-md-10">
                    @Html.Partial("_LessonPresentations")
                </div>
                <span asp-validation-for="LessonPresentation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @{
        if (ViewBag.SuccessCreated != null)
        {

            var notification = ViewBag.SuccessCreated.ToString().Split(',');

            <script>

                toastr.options = {
                    "closeButton": false,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": true,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": true,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "2000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }

                toastr["@notification[0]"]("@notification[1]");


            </script>

        }
    }
}